name: release CI

on:
  push:
    branches: [ "master" ]
    tags:
      - 'v*'  # 推送 v 开头的 tag 时触发，如 v1.0.0
  pull_request:
    branches: [ "master" ]

jobs:
  build:
    strategy:
      matrix:
        configuration: [Debug]
        # 在 tag 推送时使用 Release 配置
        include:
          - configuration: Release
            if: startsWith(github.ref, 'refs/tags/v')

    runs-on: windows-latest

    env:
      Solution_Name: subs-check.win.gui.sln
      Project_Path: subs-check.win.gui.csproj
      Wap_Project_Directory: .
      Configuration: ${{ matrix.configuration }}

    steps:
    - name: Checkout
      uses: actions/checkout@v3
      with:
        fetch-depth: 0

    # Install the .NET Core workload
    - name: Install .NET Core
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 8.0.x

    # Add MSBuild to the PATH
    - name: Setup MSBuild.exe
      uses: microsoft/setup-msbuild@v1.1

    # Install NuGet packages
    - name: Install NuGet packages
      run: |
        nuget sources Add -Name "nuget.org" -Source "https://api.nuget.org/v3/index.json"
        nuget install YamlDotNet -Version 16.0.0
        mkdir packages
        xcopy /E /I YamlDotNet* packages\

    # Restore the application
    - name: Restore the application
      run: |
        nuget restore $env:Solution_Name
        msbuild $env:Solution_Name /t:Restore /p:Configuration=$env:Configuration
      env:
        Configuration: ${{ matrix.configuration }}

    # Build the application
    - name: Build the application
      run: |
        msbuild $env:Solution_Name /p:Configuration=$env:Configuration /p:Platform="Any CPU" /p:DebugSymbols=false /p:DebugType=None
      env:
        Configuration: ${{ matrix.configuration }}

    # Create release package
    - name: Create release package
      if: startsWith(github.ref, 'refs/tags/v')
      run: |
        $releaseDir = "release-package"
        New-Item -ItemType Directory -Path $releaseDir -Force
        Copy-Item "bin\Release\*" -Destination $releaseDir -Recurse
        Compress-Archive -Path "$releaseDir\*" -DestinationPath "SubsCheck-Win-GUI.zip" -Force

    # Create GitHub Release from tag
    - name: Create GitHub Release
      if: startsWith(github.ref, 'refs/tags/v')
      uses: softprops/action-gh-release@v1
      with:
        files: SubsCheck-Win-GUI.zip
        name: Release ${{ github.ref_name }}
        draft: false
        prerelease: false
        generate_release_notes: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    # Upload build artifacts (for non-release builds)
    - name: Upload build artifacts
      if: github.event_name != 'push' || !startsWith(github.ref, 'refs/tags/v')
      uses: actions/upload-artifact@v3
      with:
        name: Build Artifacts
        path: bin\${{ matrix.configuration }}
